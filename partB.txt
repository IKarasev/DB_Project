#5
SELECT first_name||' '||last_name AS EMPLOYEE, hire_date AS HIRED, name AS 'TRAINING',
       date_acquired AS 'DATE', (date_acquired-date_hired) as 'PERIOD'
FROM employee LEFT JOIN training USING (emp_num)
WHERE EXTRACT(year FROM hire_date) = 13d
ORDER BY GROUPING SETS((first_name,last_name,hire_date),());

#6
ASSUMPTIONS:
	* Completed projects - those which has total cost.
	* Discontinued - those, where no employee was working on for more than a month.
	
SELECT proj_number AS "ID", name AS "PROJECT", start_date as "STARTED",
       NVL2(total_cost,'completed','on-going') as "STATUS"
FROM project P1
WHERE TO_NUMBER(0) <> (
       SELECT COUNT(DISTINCT date_assigned)-MONTHS_BETWEEN(MAX(date_ended),MIN(date_assigned))
       FROM assignment
       WHERE proj_number = P1.proj_number)
      AND total_cost IS NOT NULL
UNION
SELECT proj_number AS "ID", name AS "PROJECT", start_date as "STARTED",
       NVL2(total_cost,'completed','on-going') as "STATUS"
FROM project P1
WHERE (TO_NUMBER(0) <> (
       SELECT COUNT(DISTINCT date_assigned)-MONTHS_BETWEEN(MAX(date_ended),MIN(date_assigned))
       FROM assignment
       WHERE proj_number = P1.proj_number)
      OR TO_NUMBER(30) < (SELECT SYSDATE-MAX(date_assigned) FROM assignment
                          WHERE proj_number = P1.proj_number)
      ) AND total_cost IS NULL;

#7
SELECT * FROM (
SELECT TO_CHAR('1 Quarter') AS "QUARTER", count(DISTINCT proj_number) AS "PROJECTS",
       count(DISTINCT emp_num) AS "EMPLOYEES",
       ROUND((SUM(hours_used)/count(DISTINCT proj_number)),2) AS "TIME AVERAGE"
FROM project JOIN assignment USING (proj_number)
     JOIN employee USING (emp_num)
WHERE (start_date >= TO_DATE('01-01-2013','DD-MM-YYYY'))
      AND (start_date < TO_DATE('01-04-2013','DD-MM-YYYY'))
GROUP BY to_char('1 Quarter')
UNION
SELECT TO_CHAR('2 Quarter'), count(DISTINCT proj_number),
       count(DISTINCT emp_num),
       ROUND((SUM(hours_used)/count(DISTINCT proj_number)),2)
FROM project JOIN assignment USING (proj_number)
     JOIN employee USING (emp_num)
WHERE (start_date >= TO_DATE('01-04-2013','DD-MM-YYYY'))
      AND (start_date < TO_DATE('01-07-2013','DD-MM-YYYY'))
GROUP BY to_char('2  Quarter')
UNION
SELECT TO_CHAR('3 Quarter'), count(DISTINCT proj_number),
       count(DISTINCT emp_num),
       ROUND((SUM(hours_used)/count(DISTINCT proj_number)),2)
FROM project JOIN assignment USING (proj_number)
     JOIN employee USING (emp_num)
WHERE (start_date >= TO_DATE('01-07-2013','DD-MM-YYYY'))
      AND (start_date < TO_DATE('01-10-2013','DD-MM-YYYY'))
GROUP BY to_char('3  Quarter') 
UNION
SELECT TO_CHAR('4 Quarter'), count(DISTINCT proj_number),
       count(DISTINCT emp_num),
       ROUND((SUM(hours_used)/count(DISTINCT proj_number)),2)
FROM project JOIN assignment USING (proj_number)
     JOIN employee USING (emp_num)
WHERE (start_date >= TO_DATE('01-10-2013','DD-MM-YYYY'))
      AND (start_date < TO_DATE('01-01-2014','DD-MM-YYYY'))
GROUP BY to_char('4 Quarter')
)
ORDER BY 1;

#8
SELECT EMP.emp_num AS "ID", EMP.emp_first||' '||EMP.emp_last AS "EMPLOYEE",
       NVL(SUM(DECODE(TR.code,1,1)),0) AS "SKILLJAVA",
       (SELECT MAX(date_acquired) FROM employee LEFT JOIN training USING (emp_num)
        WHERE emp_num=EMP.emp_num AND code = 1) AS "DATE",
       NVL(SUM(DECODE(TR.code,2,1)),0) AS "DB Mngmnt",
       (SELECT MAX(date_acquired) FROM employee LEFT JOIN training USING (emp_num)
        WHERE emp_num=EMP.emp_num AND code = 2) AS "DATE",
       NVL(SUM(DECODE(TR.code,3,1)),0) AS "Accounting",
       (SELECT MAX(date_acquired) FROM employee LEFT JOIN training USING (emp_num)
        WHERE emp_num=EMP.emp_num AND code = 3) AS "DATE",
       NVL(SUM(DECODE(TR.code,4,1)),0) AS "Commun.",
       (SELECT MAX(date_acquired) FROM employee LEFT JOIN training USING (emp_num)
        WHERE emp_num=EMP.emp_num AND code = 4) AS "DATE",
       NVL(SUM(DECODE(TR.code,5,1)),0) AS "Mngmnt",
       (SELECT MAX(date_acquired) FROM employee LEFT JOIN training USING (emp_num)
        WHERE emp_num=EMP.emp_num AND code = 5) AS "DATE",
       NVL(SUM(DECODE(TR.code,6,1)),0) AS "Data Mining",
       (SELECT MAX(date_acquired) FROM employee LEFT JOIN training USING (emp_num)
        WHERE emp_num=EMP.emp_num AND code = 6) AS "DATE",
       COUNT(DISTINCT TR.code) as "SKILLS"
FROM employee EMP FULL JOIN training TR ON (EMP.emp_num=TR.emp_num)
              JOIN skill SK ON (TR.code=SK.code)
GROUP BY (EMP.emp_num,EMP.emp_first,EMP.emp_last);

SELECT EMP.emp_num AS "ID", EMP.emp_first||' '||EMP.emp_last AS "EMPLOYEE",
       NVL(SUM(DECODE(TR.code,1,1)),0) AS "JAVA",
       NVL(SUM(DECODE(TR.code,2,1)),0) AS "DB Mngmnt",
       NVL(SUM(DECODE(TR.code,3,1)),0) AS "Accounting",
       NVL(SUM(DECODE(TR.code,4,1)),0) AS "Commun.",
       NVL(SUM(DECODE(TR.code,5,1)),0) AS "Mngmnt",
       NVL(SUM(DECODE(TR.code,6,1)),0) AS "Data Mining",
       COUNT(DISTINCT TR.code) as "SKILLS"
FROM employee EMP FULL JOIN training TR ON (EMP.emp_num=TR.emp_num)
              JOIN skill SK ON (TR.code=SK.code)
GROUP BY (EMP.emp_num,EMP.emp_first,EMP.emp_last);
           
#9
SELECT department.name AS "DEPARTMENT", description AS "SKILL", count(DISTINCT train_num) AS "TRAININGS",
       RANK() OVER (ORDER BY count(DISTINCT train_num) DESC NULLS LAST) AS "RANK"
FROM department LEFT JOIN employee USING(dept_code)
     LEFT JOIN training USING(emp_num)
     JOIN skill USING(code)
WHERE date_acquired < SYSDATE
GROUP BY (department.name,description);





